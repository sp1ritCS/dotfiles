#!/bin/bash

# config
MAX_TEMP=40
# set column width
COLUMNS=2
# colors
white="\e[39m"
green="\e[1;32m"
red="\e[1;31m"
dim="\e[2m"
undim="\e[0m"

# disks to check
disks=(sdb sda)
disknames=(root Data)

# hddtemp
hddtemp_host=localhost
hddtemp_port=7634

# update cached
if [[ $(expr $(date -r ~/.cache/smarthdd +%s) + 604800) -lt $(date +%s) ]]; then
	echo "Refreshing smartdata"
	pkexec tac /var/log/syslog | grep -hiP 'smartd\[[[:digit:]]+\]:' | grep -iP "previous self-test" >> ~/.cache/smarthdd
fi

# logfiles to check
logfiles="$HOME/.cache/smarthdd"

# get all lines with smartd entries from syslog
lines=$(tac $logfiles | grep -hiP 'smartd\[[[:digit:]]+\]:' | grep -iP "previous self-test")
# use nc to query temps from hddtemp daemon
hddtemp=$(nc $hddtemp_host $hddtemp_port | sed 's/|//m' | sed 's/||/ \n/g')

out=""
for i in "${!disks[@]}"; do
    disk=${disks[$i]}
    # use disknames if given
    diskname=${disknames[$i]}
    if [ -z "${diskname}" ]; then
        diskname=$disk
    fi
    uuid=$(blkid -s UUID -o value "/dev/${disk}")
    status=$( (grep "${uuid}" <<< "${lines}") | grep -m 1 -oP "previous self-test.*" | awk '{ print $4 " " $5 }')
    temp=$( (grep "${disk}" <<< "${hddtemp}") | awk -F'|' '{ print $3 }')

    # color green if temp <= MAX_TEMP, else red
    if [[ "${temp}" -gt "${MAX_TEMP}" ]]; then
        color=$red
    else
        color=$green
    fi
    # add "C" if temp is numeric
    if [[ "$temp" =~ ^[0-9]+$ ]]; then
        temp="${temp}C"
    fi
    # color green if status is "without error", else red
    if [[ "${status}" == "without error" ]]; then
        status_color=$green
    else
        status_color=$red
    fi

    # print temp & smartd error
    out+="${color_subtitle}${diskname}${ansi_reset}:,${color}${temp}${undim} | ${status_color}${status}${undim},"
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

printf "\n${color_title}Disk status:${ansi_reset} ${text_italic}cached from $(date -r ~/.cache/smarthdd +%d.%m.%C)${ansi_reset}\n"
printf "$out" | column -ts $',' | sed -e 's/^/  /'
